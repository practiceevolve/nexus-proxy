plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id "com.diffplug.gradle.spotless" version "3.29.0"
}

group 'com.travelaudience.nexus'
version '2.3.0'

mainClassName = 'com.travelaudience.nexus.proxy.Main'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.github.ben-manes.caffeine:caffeine:2.5.2'
    compile 'com.google.apis:google-api-services-cloudresourcemanager:v1beta1-rev446-1.22.0'
    compile 'com.google.apis:google-api-services-oauth2:v1-rev127-1.22.0'
    compile 'io.vertx:vertx-auth-jwt:3.4.2'
    compile 'io.vertx:vertx-unit:3.4.2'
    compile 'io.vertx:vertx-web:3.4.2'
    compile 'io.vertx:vertx-web-templ-handlebars:3.4.2'
    testCompile 'org.powermock:powermock-api-mockito2:1.7.0'
    testCompile 'org.powermock:powermock-module-junit4:1.7.0'
}

repositories {
    mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    javadoc.failOnError = false
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    // the following are not needed until e2e tests are made available
    systemProperty "ORGANIZATION_ID", "ORGANIZATION_ID"
    systemProperty "CLIENT_ID", "CLIENT_ID"
    systemProperty "CLIENT_SECRET", "CLIENT_SECRET"
}

shadowJar {
    classifier = null
}

task wrapper(type: Wrapper) {
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
    gradleVersion = '4.9.0'
}
